/*
 * $Id: IORgeneratorTest.java 793 2008-09-17 02:09:28Z takaya $
 * Copyright (C) 2008 AIST, National Institute of Advanced Industrial Science and Technology
 *
 */

package jp.go.aist.utils;

import junit.framework.TestCase;

public class IORgeneratorTest extends TestCase {

	public void testFillHeadZeroString() {
		IORgenerator iorGen = new IORgenerator("rm11", "127.0.0.1", "5656");
		
		assertEquals("0000000c", iorGen.fillHeadZeroString("c", 8));
	}

	public void testFillTrailerZeroString() {
		IORgenerator iorGen = new IORgenerator("rm11", "127.0.0.1", "5656");
		
		assertEquals("c0000000", iorGen.fillTrailerZeroString("c", 8));
		assertEquals("3031323334000000", iorGen.fillTrailerZeroString("303132333400", 4*2));
	}

	public void testHexInterfaceName() {
		IORgenerator iorGen = new IORgenerator("rm11", "127.0.0.1", "5656");
		String rm11IOR = iorGen.hexInterfaceName("rm11");
		//assertEquals(iorGen.string_to_hex("IDL:rm11:1.0"), rm11IOR);
		assertEquals("0000000d49444c3a726d31313a312e3000000000", rm11IOR);
		
		String LcdIOR = iorGen.hexInterfaceName("LCD");
		assertEquals("0000000c49444c3a4c43443a312e3000", LcdIOR);	}

	public void testHexIPAddress() {
		IORgenerator iorGen = new IORgenerator("rm11", "127.0.0.1", "5656");
		
		assertEquals("0d3139322e3136382e312e3130", iorGen.hexIPAddress("192.168.1.10"));
	}

	public void testHexPortNumber() {
		IORgenerator iorGen = new IORgenerator("rm11", "127.0.0.1", "5656");
		
		assertEquals("00001618", iorGen.hexPortNumber("5656", 0));
		assertEquals("001618", iorGen.hexPortNumber("5656", 1));
		assertEquals("000016180000", iorGen.hexPortNumber("5656", 2));
		assertEquals("0016180000", iorGen.hexPortNumber("5656", 3));
	}

	public void testGetIORString() {
		{
			String expectedIOR = "IOR:000000000000000d49444c3a726d31313a312e3000000000000000010000000000000086000102000000000d3139322e3136382e312e31380000161800000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("rm11", "192.168.1.18", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}

		{
			String expectedIOR = "IOR:000000000000000d49444c3a726d31313a312e3000000000000000010000000000000082000102000000000a3139322e312e312e3100161800000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("rm11", "192.1.1.1", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}
		
		{
			String expectedIOR = "IOR:000000000000000d49444c3a726d31313a312e300000000000000001000000000000008a000102000000000f3135302e32392e3230332e31373300001618000000000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("rm11", "150.29.203.173", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}

		{
			String expectedIOR = "IOR:000000000000000d49444c3a726d31313a312e3000000000000000010000000000000086000102000000000c3139322e3136372e312e31001618000000000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("rm11", "192.167.1.1", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}
		
		{
			String expectedIOR = "IOR:000000000000000c49444c3a4c43443a312e300000000001000000000000008a000102000000000f3135302e32392e3230332e31373300001618000000000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("LCD", "150.29.203.173", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}
		
		{
			String expectedIOR = "IOR:000000000000000c49444c3a4c43443a312e3000000000010000000000000086000102000000000d3139322e3136382e312e31380000161800000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("LCD", "192.168.1.18", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}
		
		{
			String expectedIOR = "IOR:000000000000000e49444c3a68656c6c6f3a312e30000000000000010000000000000086000102000000000c3139322e3136372e312e31001618000000000031afabcb0000000020af9478d600000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002";
			IORgenerator iorGen = new IORgenerator("hello", "192.167.1.1", "5656");
			assertEquals(expectedIOR, iorGen.getIORString());
		}
	}

	public void testString_to_hex() {
		IORgenerator iorGen = new IORgenerator("rm11", "127.0.0.1", "5656");
		
		assertEquals("31323334353637383930", iorGen.string_to_hex("1234567890"));
	}

}
