#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'


require "strscan"
require "marshall"
require "idl"
require "template"
require "pp"

class IDLParser < Racc::Parser

module_eval(<<'...end parse2.y/module_eval...', 'parse2.y', 683)

##	include	IDL::Template

	RESERVED = {
		"abstract"		=> :ABSTRACT,
		"any"			=> :ANY,
		"attribute"		=> :ATTRIBUTE,
		"boolean"		=> :BOOLEAN,
		"case"			=> :CASE,
		"char"			=> :CHAR,
		"component"		=> :COMPONENT,
		"const"			=> :CONST,
		"consumes"		=> :CONSUMES,
		"context"		=> :CONTEXT,
		"custom"		=> :CUSTOM,
		"default"		=> :DEFAULT,
		"double"		=> :DOUBLE,
		"exception"		=> :EXCEPTION,
		"emits"			=> :EMITS,
		"enum"			=> :ENUM,
		"eventtype"		=> :EVENTTYPE,
		"factotry"		=> :FACTORY,
		"FALSE"			=> :FALSE,
		"finder"		=> :FINEDER,
		"fixed"			=> :FIXED,
		"float"			=> :FLOAT,
		"getraises"		=> :GETRAISES,
		"home"			=> :HOME,
		"import"		=> :IMPORT,
		"in"			=> :IN,
		"inout"			=> :INOUT,
		"interface"		=> :INTERFACE,
		"local"			=> :LOCAL,
		"long"			=> :LONG,
		"module"		=> :MODULE,
		"multiple"		=> :MULTIPLE,
		"native"		=> :NATIVE,
		"Object"		=> :OBJECT,
		"octet"			=> :OCTET,
		"oneway"		=> :ONEWAY,
		"out"			=> :OUT,
		"primarykey"	=> :PRIMARYKEY,
		"private"		=> :PRIVATE,
		"provides"		=> :PROVIDES,
		"public"		=> :PUBLIC,
		"publishes"		=> :PUBLISHES,
		"raises"		=> :RAISES,
		"readonly"		=> :READONLY,
		"setraises"		=> :SETRAISES,
		"sequence"		=> :SEQUENCE,
		"short"			=> :SHORT,
		"string"		=> :STRING,
		"struct"		=> :STRUCT,
		"supports"		=> :SUPPORTS,
		"switch"		=> :SWITCH,
		"TRUE"			=> :TRUE,
		"truncatable"	=> :TRUNCATABLE,
		"typedef"		=> :TYPEDEF,
		"typeid"		=> :TYPEID,
		"typeprefix"	=> :TYPEPREFIX,
		"unsigned"		=> :UNSIGNED,
		"union"			=> :UNION,
		"uses"			=> :USES,
		"ValueBase"		=> :VALUEBASE,
		"valuetype"		=> :VALUETYPE,
		"void"			=> :VOID,
		"wchar"			=> :WCHAR,
		"wstring"		=> :WSTRING,
		"unsigned short" => :USHORT,
		"unsigned long"  => :ULONG,
		"unsigned long long"  => :ULONGLONG,
		"long long"     => :LONGLONG,
		"long double"   => :LONGDOUBLE,
	}

	def initialize()
		@yydebug = true
		@q = []
	end

	def parseFile( f )
		f.each do |line|
			parse(line)
		end
		@q.push [false, '$']

		tree = do_parse()

		tree.dump if ENV['DEBUG_IDL'].to_i > 1

		context = IDL::Context.new()

		[ tree.execute( context ), tree.generate( context ) ]
	end

	def parse(str)
		s = StringScanner.new(str)
		until s.eos?
			s.scan(/\A\s+/)					## whitespace
			s.scan(/#.*$/)					## # something

			s.scan(/::/)					## '::'
			if s[0]
				@q.push [s[0], s[0]]	
			end

			s.scan(/[\[\]{};<>(),=:]/)		## particular symbols
			if s[0]
				@q.push [s[0], s[0]]	
			end

			s.scan(/"[^"]*"/)				## string
			if s[0]
				@q.push [:STRING_LITERAL, s[0]]	
			end

			s.scan(/\A\d+/)					## integer
			if s[0]
				@q.push [:INTEGER_LITERAL, s[0]]
			end

			s.scan(/\w+/)
			if s[0]
				if RESERVED.key?(s[0])
					@q.push [RESERVED[s[0]], s[0]]
				else 
					@q.push [:identifier, s[0]]
				end
			end
		end
	end

	def next_token
		@q.shift
	end

	attr_reader	:definitions

...end parse2.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    -1,   414,    70,    19,   146,   268,   390,    30,    36,   241,
    57,   146,   374,    12,    16,   433,    70,   409,   436,   255,
   256,   387,   402,     8,    57,   434,     8,   205,   437,   160,
   374,   388,   403,   425,   311,   111,   332,   -51,   362,   310,
   295,   355,   331,   426,    70,     7,    10,   167,     7,    10,
   167,   167,    57,   265,     8,   264,   393,   395,    14,    22,
   267,    14,    22,    33,   378,   379,    33,   263,    19,   255,
   256,    25,    30,    36,    25,   226,     7,    10,    12,    16,
   373,    21,   378,   379,    21,   222,   225,   230,     8,    14,
    22,   373,   147,   148,    33,   261,    19,    70,   253,   254,
    30,    36,    25,   226,   146,    57,    12,    16,   274,    70,
     7,    10,    21,   222,   225,   230,     8,    57,    70,    70,
   136,    70,   146,    14,    22,   278,    57,    57,    33,    57,
    19,   144,   145,   299,    30,    36,    25,   279,     7,    10,
    12,    16,   259,   257,   258,    13,    21,    70,   228,    70,
     8,    14,    22,   280,    70,    57,    33,    57,   281,   227,
   231,   233,    57,   252,    25,     8,   305,    75,    80,    83,
    70,    91,     7,    10,    21,    70,    70,   250,    57,   290,
    33,   255,   256,    57,    57,    14,    22,     7,    10,   -47,
    33,    70,   253,   254,    70,   -48,   136,   154,    25,    57,
    14,    22,    57,   154,   292,    33,   393,   395,    21,   259,
   257,   258,   247,    25,   226,   259,   257,   258,   359,   360,
   367,   363,   244,    21,   222,   225,   230,   266,   296,   297,
   238,   154,   203,   309,    64,    67,    72,    75,    80,    83,
    88,    91,    44,    52,    60,    63,    66,   202,   200,   199,
    33,    87,   315,   161,    51,    59,    70,   156,   308,   169,
   167,   166,   165,   164,    57,    50,    58,   162,   161,   325,
   159,   157,   156,   146,   329,   274,   146,   155,   150,   333,
   146,   146,   136,   108,   136,   340,   341,   145,   146,    70,
   244,   345,   346,   149,   146,   143,   142,    57,   141,    64,
    67,    72,    75,    80,    83,    88,    91,    44,    52,    60,
    63,    66,   347,   264,   252,    33,    87,   348,   140,    51,
    59,   351,   108,   139,   356,   138,   136,   131,   368,   369,
    50,    58,    64,    67,    72,    75,    80,    83,    88,    91,
    44,    52,    60,    63,    66,   130,    70,   129,    33,    87,
   373,   128,    51,    59,    57,   380,   381,   108,   360,   385,
   385,   127,   126,    50,    58,   125,   124,   398,   401,   123,
   122,   108,   121,   363,   120,   108,   412,   117,   116,    70,
   416,   115,   420,   114,   110,   108,   108,    57,   146,    64,
    67,    72,    75,    80,    83,    88,    91,    44,    52,    60,
    63,    66,   427,   428,   136,    33,    87,   430,   431,    51,
    59,   107,   146,    43,    42,     3,   146,   439,   146,   nil,
    50,    58,    64,    67,    72,    75,    80,    83,    88,    91,
    44,    52,    60,    63,    66,   nil,   393,   395,    33,    87,
    70,   nil,    51,    59,   nil,   nil,   nil,   nil,    57,   nil,
   nil,   nil,   nil,    50,    58,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    57,   nil,    64,    67,    72,    75,    80,    83,    88,
    91,    44,    52,    60,    63,    66,   nil,   nil,   nil,    33,
    87,   nil,   nil,    51,    59,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    50,    58,    64,    67,    72,    75,
    80,    83,    88,    91,    44,    52,    60,    70,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    57,    51,    59,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    58,    70,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,
    70,   nil,   nil,   nil,   nil,   191,   nil,   nil,    57,   nil,
    64,    67,    72,    75,    80,    83,    88,    91,    44,    52,
    60,   175,   177,   179,   181,   184,   187,   190,   195,   170,
    51,    59,   nil,    70,   nil,   nil,   288,   nil,   nil,   nil,
   nil,    57,    58,    64,    67,    72,    75,    80,    83,    88,
    91,    44,    52,    60,   nil,   nil,   nil,   nil,   nil,   nil,
    87,   nil,   nil,    51,    59,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    50,    58,    64,    67,    72,    75,
    80,    83,    88,    91,    44,    52,    60,    63,    66,   nil,
    70,   nil,    33,    87,   nil,   nil,    51,    59,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    50,    58,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    57,   nil,    64,    67,    72,    75,    80,    83,    88,
    91,    44,    52,    60,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    51,    59,   nil,    70,   nil,   277,   nil,
   nil,   nil,   nil,   nil,    57,    58,    64,    67,    72,    75,
    80,    83,    88,    91,    44,    52,    60,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    51,    59,   nil,    70,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,    58,    64,
    67,    72,    75,    80,    83,    88,    91,    44,    52,    60,
    63,    66,   nil,   nil,   nil,    33,    87,   nil,   nil,    51,
    59,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    50,    58,    64,    67,    72,    75,    80,    83,    88,    91,
    44,    52,    60,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    57,    51,    59,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    58,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    64,    67,    72,    75,
    80,    83,    88,    91,    44,    70,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,   nil,   nil,    51,    59,   nil,   nil,
   nil,   191,   nil,   nil,   nil,   nil,   nil,    96,   nil,   nil,
   nil,   188,   192,   nil,   nil,   nil,   173,   175,   177,   179,
   181,   184,   187,   190,   195,   170,    70,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   188,   192,   nil,   nil,   nil,   173,   175,   177,
   179,   181,   184,   187,   190,   195,   170,    70,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   188,   192,   nil,   nil,   nil,   173,   175,
   177,   179,   181,   184,   187,   190,   195,   170,    70,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   188,   192,   nil,   nil,   nil,   173,
   175,   177,   179,   181,   184,   187,   190,   195,   170,    70,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   192,   nil,   nil,   nil,
   173,   175,   177,   179,   181,   184,   187,   190,   195,   170,
    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   188,   192,   nil,   nil,
   nil,   173,   175,   177,   179,   181,   184,   187,   190,   195,
   170,    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,   192,   nil,
   nil,   nil,   173,   175,   177,   179,   181,   184,   187,   190,
   195,   170,    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,   192,
   nil,   nil,   nil,   173,   175,   177,   179,   181,   184,   187,
   190,   195,   170,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,
   192,   nil,   nil,   nil,   173,   175,   177,   179,   181,   184,
   187,   190,   195,   170,    70,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   188,   192,   nil,   nil,   nil,   173,   175,   177,   179,   181,
   184,   187,   190,   195,   170,    70,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   188,   192,   nil,   nil,   nil,   173,   175,   177,   179,
   181,   184,   187,   190,   195,   170,    70,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   188,   192,   nil,   nil,   nil,   173,   175,   177,
   179,   181,   184,   187,   190,   195,   170,    70,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   188,   192,   nil,   nil,   nil,   173,   175,
   177,   179,   181,   184,   187,   190,   195,   170,    70,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   188,   192,   nil,   nil,   nil,   173,
   175,   177,   179,   181,   184,   187,   190,   195,   170,    70,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   192,   nil,   nil,   nil,
   173,   175,   177,   179,   181,   184,   187,   190,   195,   170,
    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   188,   192,   nil,   nil,
   nil,   173,   175,   177,   179,   181,   184,   187,   190,   195,
   170,    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,   192,   nil,
   nil,   nil,   173,   175,   177,   179,   181,   184,   187,   190,
   195,   170,    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,   192,
   nil,   nil,   nil,   173,   175,   177,   179,   181,   184,   187,
   190,   195,   170,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,
   192,   nil,   nil,   nil,   173,   175,   177,   179,   181,   184,
   187,   190,   195,   170,    70,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   188,   192,   nil,   nil,   nil,   173,   175,   177,   179,   181,
   184,   187,   190,   195,   170 ]

racc_action_check = [
    20,   392,    13,    20,   119,   201,   367,    20,    20,   163,
    13,   282,   402,    20,    20,   421,   154,   388,   432,   317,
   317,   364,   375,    20,   154,   421,   163,   154,   432,   119,
   351,   364,   375,   406,   245,    13,   282,   343,   339,   245,
   232,   335,   275,   406,   345,    20,    20,   339,   163,   163,
   335,   275,   345,   197,   343,   196,   392,   392,    20,    20,
   201,   163,   163,    20,   402,   402,   163,   193,     2,   174,
   174,    20,     2,     2,   163,   163,   343,   343,     2,     2,
   367,    20,   351,   351,   163,   163,   163,   163,     2,   343,
   343,   388,    80,    80,   343,   189,   159,   247,   172,   172,
   159,   159,   343,   343,   206,   247,   159,   159,   207,    21,
     2,     2,   343,   343,   343,   343,   159,    21,   205,   203,
   209,   238,   183,     2,     2,   216,   205,   203,     2,   238,
   236,    72,    72,   236,   236,   236,     2,   217,   159,   159,
   236,   236,   319,   319,   319,     2,     2,   329,   158,   401,
   236,   159,   159,   219,   433,   329,   159,   401,   221,   158,
   158,   158,   433,   171,   159,   158,   238,   238,   238,   238,
   222,   238,   236,   236,   159,   385,   274,   168,   222,   225,
   238,   318,   318,   385,   274,   236,   236,   158,   158,   110,
   236,   110,   316,   316,   425,   164,   167,   110,   236,   110,
   158,   158,   425,   164,   229,   158,   368,   368,   236,   320,
   320,   320,   166,   158,   158,   176,   176,   176,   337,   337,
   340,   340,   165,   158,   158,   158,   158,   198,   233,   234,
   161,   157,   153,   242,   110,   110,   110,   110,   110,   110,
   110,   110,   110,   110,   110,   110,   110,   150,   147,   146,
   110,   110,   251,   143,   110,   110,   239,   142,   239,   136,
   133,   128,   127,   124,   239,   110,   110,   121,   120,   262,
   117,   115,   114,   271,   272,   273,   113,   112,   106,   286,
   287,   103,   291,   293,   294,   296,   304,   305,   306,     7,
   310,   312,   314,    87,    79,    66,    63,     7,    59,   239,
   239,   239,   239,   239,   239,   239,   239,   239,   239,   239,
   239,   239,   324,   326,   327,   239,   239,   328,    57,   239,
   239,   333,   334,    51,   336,    50,    49,    41,   341,   342,
   239,   239,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,    39,   227,    37,     7,     7,
   350,    35,     7,     7,   227,   353,   354,   356,   357,   359,
   360,    33,    32,     7,     7,    31,    30,   372,   373,    28,
    26,   380,    25,   387,    22,   389,   391,    19,    17,   396,
   395,    16,   398,    14,    12,   404,    10,   396,   407,   227,
   227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
   227,   227,   410,   415,   417,   227,   227,   418,   420,   227,
   227,     9,   422,     5,     3,     1,   435,   436,   438,   nil,
   227,   227,   396,   396,   396,   396,   396,   396,   396,   396,
   396,   396,   396,   396,   396,   nil,   396,   396,   396,   396,
   156,   nil,   396,   396,   nil,   nil,   nil,   nil,   156,   nil,
   nil,   nil,   nil,   396,   396,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   230,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   230,   nil,   156,   156,   156,   156,   156,   156,   156,
   156,   156,   156,   156,   156,   156,   nil,   nil,   nil,   156,
   156,   nil,   nil,   156,   156,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   156,   156,   230,   230,   230,   230,
   230,   230,   230,   230,   230,   230,   230,   223,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   223,   230,   230,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   230,   180,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   180,   nil,   nil,
   149,   nil,   nil,   nil,   nil,   180,   nil,   nil,   149,   nil,
   223,   223,   223,   223,   223,   223,   223,   223,   223,   223,
   223,   180,   180,   180,   180,   180,   180,   180,   180,   180,
   223,   223,   nil,   231,   nil,   nil,   223,   nil,   nil,   nil,
   nil,   231,   223,   149,   149,   149,   149,   149,   149,   149,
   149,   149,   149,   149,   nil,   nil,   nil,   nil,   nil,   nil,
   149,   nil,   nil,   149,   149,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   149,   231,   231,   231,   231,
   231,   231,   231,   231,   231,   231,   231,   231,   231,   nil,
   290,   nil,   231,   231,   nil,   nil,   231,   231,   290,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   231,   231,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   377,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   377,   nil,   290,   290,   290,   290,   290,   290,   290,
   290,   290,   290,   290,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   290,   290,   nil,   210,   nil,   210,   nil,
   nil,   nil,   nil,   nil,   210,   290,   377,   377,   377,   377,
   377,   377,   377,   377,   377,   377,   377,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   377,   377,   nil,   366,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   366,   377,   210,
   210,   210,   210,   210,   210,   210,   210,   210,   210,   210,
   210,   210,   nil,   nil,   nil,   210,   210,   nil,   nil,   210,
   210,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   210,   210,   366,   366,   366,   366,   366,   366,   366,   366,
   366,   366,   366,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   366,   366,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   366,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,     8,     8,     8,
     8,     8,     8,     8,     8,   169,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   169,   nil,   nil,     8,     8,   nil,   nil,
   nil,   169,   nil,   nil,   nil,   nil,   nil,     8,   nil,   nil,
   nil,   169,   169,   nil,   nil,   nil,   169,   169,   169,   169,
   169,   169,   169,   169,   169,   169,   256,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   256,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   256,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   256,   256,   nil,   nil,   nil,   256,   256,   256,
   256,   256,   256,   256,   256,   256,   256,   258,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   258,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   258,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   258,   258,   nil,   nil,   nil,   258,   258,
   258,   258,   258,   258,   258,   258,   258,   258,   393,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   393,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   393,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   393,   393,   nil,   nil,   nil,   393,
   393,   393,   393,   393,   393,   393,   393,   393,   393,   191,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   191,   191,   nil,   nil,   nil,
   191,   191,   191,   191,   191,   191,   191,   191,   191,   191,
   257,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   257,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   257,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   257,   257,   nil,   nil,
   nil,   257,   257,   257,   257,   257,   257,   257,   257,   257,
   257,   250,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   250,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   250,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   250,   250,   nil,
   nil,   nil,   250,   250,   250,   250,   250,   250,   250,   250,
   250,   250,   252,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   252,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   252,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   252,   252,
   nil,   nil,   nil,   252,   252,   252,   252,   252,   252,   252,
   252,   252,   252,   202,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   202,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   202,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   202,
   202,   nil,   nil,   nil,   202,   202,   202,   202,   202,   202,
   202,   202,   202,   202,   253,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   253,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   253,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   253,   253,   nil,   nil,   nil,   253,   253,   253,   253,   253,
   253,   253,   253,   253,   253,   259,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   259,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   259,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   259,   259,   nil,   nil,   nil,   259,   259,   259,   259,
   259,   259,   259,   259,   259,   259,   141,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   141,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   141,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   141,   141,   nil,   nil,   nil,   141,   141,   141,
   141,   141,   141,   141,   141,   141,   141,   139,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   139,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   139,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   139,   139,   nil,   nil,   nil,   139,   139,
   139,   139,   139,   139,   139,   139,   139,   139,   138,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   138,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   138,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   138,   138,   nil,   nil,   nil,   138,
   138,   138,   138,   138,   138,   138,   138,   138,   138,   268,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   268,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   268,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   268,   268,   nil,   nil,   nil,
   268,   268,   268,   268,   268,   268,   268,   268,   268,   268,
   264,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   264,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   264,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   264,   264,   nil,   nil,
   nil,   264,   264,   264,   264,   264,   264,   264,   264,   264,
   264,   263,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   263,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   263,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   263,   263,   nil,
   nil,   nil,   263,   263,   263,   263,   263,   263,   263,   263,
   263,   263,   254,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   254,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   254,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   254,   254,
   nil,   nil,   nil,   254,   254,   254,   254,   254,   254,   254,
   254,   254,   254,   261,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   261,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   261,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   261,
   261,   nil,   nil,   nil,   261,   261,   261,   261,   261,   261,
   261,   261,   261,   261,   255,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   255,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   255,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   255,   255,   nil,   nil,   nil,   255,   255,   255,   255,   255,
   255,   255,   255,   255,   255 ]

racc_action_pointer = [
   nil,   415,    65,   414,   nil,   411,   nil,   285,   799,   409,
   382,   nil,   380,    -2,   379,   nil,   368,   373,   nil,   373,
     0,   105,   370,   nil,   nil,   368,   365,   nil,   367,   nil,
   353,   361,   360,   357,   nil,   342,   nil,   345,   nil,   343,
   nil,   325,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   322,
   260,   258,   nil,   nil,   nil,   nil,   nil,   314,   nil,   233,
   nil,   nil,   nil,   292,   nil,   nil,   291,   nil,   nil,   nil,
   nil,   nil,    83,   nil,   nil,   nil,   nil,   nil,   nil,   282,
    43,   nil,   nil,   nil,   nil,   nil,   nil,   228,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   269,   nil,   nil,   274,   nil,   nil,   nil,
   187,   nil,   275,   264,   267,   267,   nil,   265,   nil,    -8,
   208,   262,   nil,   nil,   259,   nil,   nil,   257,   257,   nil,
   nil,   nil,   nil,   249,   nil,   nil,   190,   nil,  1384,  1343,
   nil,  1302,   252,   193,   nil,   nil,   245,   199,   nil,   556,
   223,   nil,   nil,   216,    12,   nil,   436,   221,   142,    93,
   nil,   210,   nil,     3,   193,   218,   202,   192,   108,   851,
   nil,   136,    70,   nil,    39,   nil,   183,   nil,   nil,   nil,
   545,   nil,   nil,   110,   nil,   nil,   nil,   nil,   nil,    84,
   nil,  1015,   nil,    42,   nil,   nil,    29,   -13,   161,   nil,
   nil,    -6,  1179,   115,   nil,   114,    92,    97,   nil,   116,
   712,   nil,   nil,   nil,   nil,   nil,   123,   135,   nil,   151,
   nil,   156,   166,   523,   nil,    95,   nil,   342,   nil,   202,
   469,   589,    38,   224,   227,   nil,   127,   nil,   117,   252,
   nil,   nil,   228,   nil,   nil,    28,   nil,    93,   nil,   nil,
  1097,   182,  1138,  1220,  1548,  1630,   892,  1056,   933,  1261,
   nil,  1589,   248,  1507,  1466,   nil,   nil,   nil,  1425,   nil,
   nil,   261,   263,   264,   172,    40,   nil,   nil,   nil,   nil,
   nil,   nil,    -1,   nil,   nil,   nil,   275,   268,   nil,   nil,
   646,   278,   nil,   279,   280,   nil,   265,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   265,   238,   276,   nil,   nil,   nil,
   286,   nil,   280,   nil,   222,   nil,   164,   -11,   151,   110,
   177,   nil,   nil,   nil,   246,   nil,   287,   287,   251,   143,
   nil,   nil,   nil,   301,   318,    39,   313,   132,   nil,    36,
   199,   323,   323,    31,   nil,    40,   nil,   nil,   nil,   nil,
   274,     8,   nil,   344,   271,   nil,   353,   271,   nil,   339,
   340,   nil,   nil,   nil,    10,   nil,   745,     4,   145,   nil,
   nil,   nil,   290,   348,   nil,    11,   nil,   679,   nil,   nil,
   367,   nil,   nil,   nil,   nil,   171,   nil,   351,    15,   371,
   nil,   374,    -5,   974,   nil,   370,   375,   nil,   362,   nil,
   nil,   145,   -10,   nil,   381,   nil,    22,   376,   nil,   nil,
   400,   nil,   nil,   nil,   nil,   393,   nil,   400,   405,   nil,
   371,     4,   400,   nil,   nil,   190,   nil,   nil,   nil,   nil,
   nil,   nil,     7,   150,   nil,   404,   380,   nil,   406,   nil ]

racc_action_default = [
    -2,  -277,   -20,  -277,  -129,  -277,  -130,  -277,  -277,  -277,
  -277,  -131,  -277,  -277,  -277,  -133,  -277,  -277,   -16,  -277,
   -20,  -277,  -277,   -17,    -3,  -277,  -277,    -4,  -277,   -43,
   -21,   -24,  -277,  -277,   -44,  -277,   -22,  -277,   -45,  -277,
   -46,  -277,   440,   -11,  -182,  -174,  -153,  -149,  -141,  -277,
  -277,  -210,  -183,  -175,  -154,  -152,  -142,  -277,  -251,  -212,
  -184,  -155,  -143,  -277,  -162,  -144,  -277,  -163,  -140,  -135,
   -40,  -165,  -171,  -150,  -136,  -170,  -166,  -151,  -137,  -139,
  -277,  -167,  -138,  -179,  -168,  -146,  -145,  -277,  -180,  -169,
  -147,  -181,  -173,  -148,  -128,   -82,  -250,   -83,   -84,   -85,
   -86,   -87,   -88,   -90,   -89,   -91,  -277,   -12,  -160,  -132,
   -58,  -256,  -277,  -255,  -252,  -277,   -53,  -277,    -5,  -277,
  -253,  -277,   -27,    -6,  -277,   -19,    -7,  -277,  -277,    -8,
    -9,   -10,  -156,  -134,  -159,  -161,  -160,  -158,  -277,  -277,
   -41,  -277,  -277,  -277,  -164,  -172,  -277,  -177,  -176,  -277,
  -277,   -49,   -56,   -63,  -277,  -254,  -277,   -58,  -222,   -20,
  -257,  -277,  -219,  -222,   -58,  -277,   -25,  -277,  -213,  -277,
  -126,   -95,   -97,  -113,   -99,  -117,  -102,  -118,  -105,  -119,
  -277,  -120,  -110,  -114,  -121,  -115,  -124,  -122,  -112,  -277,
  -123,  -277,  -111,   -92,  -127,  -125,   -93,  -277,  -277,   -42,
  -178,  -277,  -277,  -277,   -57,  -277,   -67,   -60,   -61,  -277,
  -277,  -186,   -55,   -69,   -68,   -70,  -277,  -277,  -216,  -277,
  -217,  -277,  -277,  -277,   -54,  -277,  -228,  -277,   -52,  -277,
  -277,  -277,  -277,  -277,  -277,  -223,   -20,   -14,  -277,  -277,
   -28,   -18,  -277,  -204,  -206,  -277,   -23,  -277,   -26,  -157,
  -277,  -277,  -277,  -277,  -277,  -277,  -277,  -277,  -277,  -277,
  -109,  -277,  -277,  -277,  -277,  -209,  -211,  -208,  -277,   -81,
   -65,   -39,   -64,   -59,  -277,  -277,  -187,  -185,   -34,   -32,
   -33,   -35,  -277,  -246,  -247,  -245,  -277,  -248,  -230,  -229,
  -277,  -277,   -29,  -277,  -277,   -30,  -277,   -31,   -15,   -13,
  -190,  -191,  -193,  -192,  -277,  -171,  -194,  -220,  -218,   -27,
  -277,  -203,   -36,   -37,  -277,  -214,   -98,  -100,  -101,  -103,
  -104,  -107,  -108,  -106,  -277,  -116,   -94,   -96,  -277,  -277,
   -62,  -188,  -258,  -277,  -277,  -277,  -266,  -267,  -264,  -277,
  -277,  -277,  -277,  -222,  -205,  -277,  -215,  -249,  -207,   -66,
  -224,  -232,  -259,  -261,  -262,   -71,  -277,  -269,  -271,  -277,
  -277,  -265,   -72,   -80,  -277,   -77,  -277,  -277,  -277,   -50,
   -38,  -225,  -226,  -277,  -236,  -277,  -233,  -277,  -237,  -238,
  -277,  -260,  -268,  -270,  -272,  -277,  -273,  -277,  -277,  -277,
   -73,  -277,  -277,  -277,  -195,  -277,  -277,  -198,  -277,  -227,
  -221,  -277,  -277,  -231,  -277,  -263,  -277,  -275,   -78,   -75,
  -277,   -79,   -74,  -196,  -189,  -277,  -201,  -277,  -277,  -199,
  -277,  -277,  -240,  -234,  -235,  -277,  -274,   -76,  -200,  -202,
  -197,  -243,  -277,  -277,  -239,  -276,  -277,  -242,  -241,  -244 ]

racc_goto_table = [
    79,   103,   109,    11,   102,   249,   113,   163,    27,    49,
     6,    99,     4,   101,   119,   133,   262,    97,    95,   216,
   229,    11,   211,   152,   216,   229,   118,   269,     6,   232,
     4,   285,   234,   289,   232,   243,   270,   234,   285,   376,
   293,   207,   394,   371,   365,   358,   321,   322,   323,   319,
   320,   384,   386,   317,   318,   245,    98,   364,   189,   197,
   391,   198,   100,   215,   213,   383,   413,   104,   105,   326,
   212,   327,   316,   272,   330,   204,   276,   242,   260,   224,
   313,   410,    94,   158,   342,   312,   201,   214,   248,   251,
   423,   408,   273,   210,   246,   304,   392,   236,   285,   418,
   334,   419,   106,    79,     1,   307,   168,   239,   286,   350,
   372,   400,   151,   399,   375,    24,   421,   432,   112,   352,
   353,   338,   361,   336,   357,    20,     2,   406,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    79,   nil,   nil,   nil,   nil,   206,   nil,    79,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,
    11,   nil,   349,   nil,    11,   237,     6,     6,     4,     4,
   314,     6,   nil,     4,   285,   275,   389,   nil,   370,   nil,
   344,   324,   nil,   nil,   nil,   285,   nil,   404,   328,   nil,
   nil,   nil,   nil,   nil,   343,   nil,   271,   nil,   206,   nil,
   nil,   nil,   nil,    79,   216,   229,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   232,   282,   287,   234,   415,   284,
    79,   nil,   nil,   287,    79,   nil,   284,   nil,   283,   291,
   nil,   306,    79,   294,   nil,   283,   nil,    11,   nil,   302,
   271,   303,   298,   nil,     6,   nil,     4,   301,   300,   nil,
   nil,   nil,   nil,   nil,   nil,   429,   nil,   335,   nil,   nil,
   339,   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   287,   nil,   337,   284,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   283,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   271,   nil,   nil,   nil,   354,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   271,   nil,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   382,   nil,
   nil,     6,   nil,     4,   nil,   nil,   nil,   nil,   nil,   287,
   nil,   nil,   284,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   287,   283,   405,   284,   nil,   nil,   nil,   nil,   407,   nil,
   nil,   411,   283,   nil,   nil,   nil,   nil,   nil,   nil,    79,
   nil,   nil,   nil,   nil,   422,   nil,   424,   nil,   417,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   435,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   438 ]

racc_goto_check = [
    28,    28,    52,    79,    61,    90,    28,    17,     5,    33,
    78,    58,    77,    60,    28,    46,    54,    56,    55,    12,
     6,    79,   102,    34,    12,     6,     5,    54,    78,     7,
    77,    83,     8,    51,     7,   110,    27,     8,    83,   123,
    51,    41,   105,    47,    49,   134,    70,    70,    70,    69,
    69,   135,   135,    68,    68,   109,    57,    48,    75,    75,
    47,    75,    59,    45,    44,   134,   105,    62,    63,    65,
    34,    66,    67,    43,    42,    40,   102,    34,    72,    38,
    27,    47,    76,    37,    35,    26,    81,    22,    21,    75,
   123,    49,    41,   101,    20,   103,   104,    13,    83,   107,
    51,   108,    53,    28,     1,   102,   111,   114,   116,   117,
   118,   119,    33,   121,   122,     4,   125,   126,   127,   128,
   129,   130,   131,   132,   133,     3,     2,   136,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,    28,   nil,    28,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    79,
    79,   nil,    27,   nil,    79,     5,    78,    78,    77,    77,
    75,    78,   nil,    77,    83,    46,    51,   nil,    27,   nil,
   110,    75,   nil,   nil,   nil,    83,   nil,    51,    75,   nil,
   nil,   nil,   nil,   nil,    17,   nil,    28,   nil,    28,   nil,
   nil,   nil,   nil,    28,    12,     6,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,    28,    28,     8,    54,    61,
    28,   nil,   nil,    28,    28,   nil,    61,   nil,    60,    33,
   nil,    28,    28,    33,   nil,    60,   nil,    79,   nil,    79,
    28,    58,     5,   nil,    78,   nil,    77,    56,    55,   nil,
   nil,   nil,   nil,   nil,   nil,    90,   nil,    46,   nil,   nil,
    46,   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    28,   nil,    52,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    60,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,   nil,    52,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,
   nil,   nil,   nil,   nil,    79,   nil,   nil,   nil,    52,   nil,
   nil,    78,   nil,    77,   nil,   nil,   nil,   nil,   nil,    28,
   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    28,    60,    52,    61,   nil,   nil,   nil,   nil,    28,   nil,
   nil,    52,    60,   nil,   nil,   nil,   nil,   nil,   nil,    28,
   nil,   nil,   nil,   nil,    28,   nil,    52,   nil,    33,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    28 ]

racc_goto_pointer = [
   nil,   104,   126,   123,   113,     6,  -138,  -129,  -126,   nil,
   nil,   nil,  -139,   -62,   nil,   nil,   nil,  -115,   nil,   nil,
   -72,   -78,   -71,   nil,   nil,   nil,  -162,  -167,    -7,   nil,
   nil,   nil,   nil,     2,   -87,  -225,   nil,   -33,   -79,   nil,
   -78,  -113,  -200,  -130,   -94,   -95,   -34,  -307,  -283,  -296,
   nil,  -190,    -8,    94,  -175,    10,     9,    48,     3,    54,
     5,    -4,    59,    60,   nil,  -194,  -193,  -180,  -200,  -206,
  -211,   nil,  -102,   nil,   nil,   -80,    75,    10,     8,     1,
   nil,   -63,   nil,  -192,   nil,   nil,   nil,   nil,   nil,   nil,
  -162,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   -63,  -134,  -143,  -272,  -326,   nil,  -297,  -295,  -110,
  -130,   -30,   nil,   nil,   -55,   nil,  -115,  -224,  -240,  -261,
   nil,  -259,  -237,  -312,   nil,  -285,  -303,   105,  -215,  -214,
  -172,  -215,  -170,  -213,  -292,  -308,  -258 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    28,    32,    37,    39,
    41,     5,     9,   nil,    18,    23,    26,   nil,    31,    35,
   nil,   nil,   240,   217,   219,   221,   nil,   nil,   183,    29,
    34,    38,    40,   209,   nil,   nil,    17,   nil,   nil,   153,
   nil,   nil,   208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   366,   nil,   137,   nil,   194,    48,    56,    62,    65,    68,
    73,    77,   nil,    86,   193,   196,   171,   172,   174,   176,
   178,   180,   182,   185,   186,   nil,   nil,    46,    54,    61,
    15,    69,    74,    78,    82,    85,    90,    93,    47,    55,
   132,   134,   135,    71,    76,    81,    84,    89,    92,    45,
    53,   nil,   nil,   nil,   nil,   nil,   396,   nil,   397,   nil,
   nil,   nil,   218,   220,   nil,   223,   nil,   nil,   nil,   nil,
   235,   nil,   nil,   nil,   377,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 89, :_reduce_1,
  0, 90, :_reduce_2,
  2, 90, :_reduce_3,
  1, 91, :_reduce_4,
  2, 91, :_reduce_5,
  2, 93, :_reduce_none,
  2, 93, :_reduce_none,
  2, 93, :_reduce_none,
  2, 93, :_reduce_none,
  2, 93, :_reduce_none,
  2, 93, :_reduce_none,
  2, 93, :_reduce_none,
  5, 98, :_reduce_none,
  1, 101, :_reduce_none,
  2, 101, :_reduce_none,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  4, 102, :_reduce_18,
  2, 103, :_reduce_none,
  0, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  4, 104, :_reduce_23,
  1, 107, :_reduce_none,
  0, 108, :_reduce_none,
  1, 108, :_reduce_none,
  0, 105, :_reduce_27,
  2, 105, :_reduce_28,
  2, 110, :_reduce_none,
  2, 110, :_reduce_none,
  2, 110, :_reduce_none,
  2, 110, :_reduce_none,
  2, 110, :_reduce_none,
  2, 110, :_reduce_none,
  2, 110, :_reduce_none,
  2, 109, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_none,
  1, 115, :_reduce_none,
  1, 116, :_reduce_40,
  2, 116, :_reduce_41,
  3, 116, :_reduce_42,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  2, 120, :_reduce_none,
  3, 120, :_reduce_none,
  3, 119, :_reduce_none,
  7, 118, :_reduce_none,
  1, 123, :_reduce_none,
  4, 117, :_reduce_none,
  0, 125, :_reduce_none,
  2, 125, :_reduce_none,
  4, 124, :_reduce_none,
  3, 124, :_reduce_none,
  2, 122, :_reduce_none,
  0, 127, :_reduce_none,
  3, 127, :_reduce_none,
  2, 127, :_reduce_none,
  1, 129, :_reduce_none,
  3, 129, :_reduce_none,
  0, 128, :_reduce_none,
  2, 128, :_reduce_none,
  1, 131, :_reduce_none,
  3, 131, :_reduce_none,
  1, 130, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  4, 132, :_reduce_none,
  4, 132, :_reduce_none,
  5, 133, :_reduce_none,
  6, 133, :_reduce_none,
  6, 133, :_reduce_none,
  7, 133, :_reduce_none,
  1, 136, :_reduce_none,
  3, 136, :_reduce_none,
  3, 137, :_reduce_none,
  1, 138, :_reduce_none,
  5, 95, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 142, :_reduce_none,
  1, 152, :_reduce_none,
  3, 152, :_reduce_none,
  1, 153, :_reduce_none,
  3, 153, :_reduce_none,
  1, 154, :_reduce_none,
  3, 154, :_reduce_none,
  1, 155, :_reduce_none,
  3, 155, :_reduce_none,
  3, 155, :_reduce_none,
  1, 156, :_reduce_none,
  3, 156, :_reduce_none,
  3, 156, :_reduce_none,
  1, 157, :_reduce_none,
  3, 157, :_reduce_none,
  3, 157, :_reduce_none,
  3, 157, :_reduce_none,
  2, 158, :_reduce_none,
  1, 158, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  3, 160, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 162, :_reduce_none,
  1, 162, :_reduce_none,
  1, 163, :_reduce_none,
  2, 94, :_reduce_128,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  2, 94, :_reduce_none,
  1, 94, :_reduce_none,
  2, 164, :_reduce_134,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 134, :_reduce_156,
  3, 134, :_reduce_157,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 140, :_reduce_none,
  1, 179, :_reduce_161,
  1, 147, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_164,
  1, 143, :_reduce_none,
  1, 143, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 183, :_reduce_none,
  1, 184, :_reduce_none,
  2, 185, :_reduce_172,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  2, 186, :_reduce_176,
  2, 187, :_reduce_177,
  3, 188, :_reduce_178,
  1, 144, :_reduce_none,
  1, 145, :_reduce_none,
  1, 146, :_reduce_none,
  1, 151, :_reduce_none,
  1, 173, :_reduce_none,
  1, 174, :_reduce_none,
  5, 165, :_reduce_185,
  1, 189, :_reduce_186,
  2, 189, :_reduce_187,
  3, 190, :_reduce_188,
  9, 166, :_reduce_189,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 192, :_reduce_195,
  2, 192, :_reduce_196,
  3, 193, :_reduce_197,
  1, 194, :_reduce_198,
  2, 194, :_reduce_199,
  3, 196, :_reduce_200,
  2, 196, :_reduce_201,
  2, 195, :_reduce_202,
  5, 167, :_reduce_none,
  1, 197, :_reduce_204,
  3, 197, :_reduce_205,
  1, 198, :_reduce_none,
  6, 176, :_reduce_207,
  4, 176, :_reduce_208,
  4, 148, :_reduce_none,
  1, 148, :_reduce_none,
  4, 149, :_reduce_none,
  1, 149, :_reduce_none,
  2, 180, :_reduce_213,
  3, 199, :_reduce_214,
  4, 199, :_reduce_215,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  5, 96, :_reduce_218,
  0, 202, :_reduce_219,
  2, 202, :_reduce_220,
  6, 112, :_reduce_221,
  0, 203, :_reduce_none,
  1, 203, :_reduce_none,
  0, 206, :_reduce_none,
  1, 206, :_reduce_none,
  0, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  3, 205, :_reduce_231,
  0, 210, :_reduce_none,
  1, 210, :_reduce_233,
  3, 210, :_reduce_234,
  3, 211, :_reduce_235,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  4, 135, :_reduce_none,
  1, 213, :_reduce_none,
  3, 213, :_reduce_none,
  4, 209, :_reduce_none,
  1, 214, :_reduce_none,
  3, 214, :_reduce_none,
  1, 139, :_reduce_none,
  1, 139, :_reduce_none,
  1, 139, :_reduce_none,
  1, 139, :_reduce_none,
  6, 177, :_reduce_none,
  1, 150, :_reduce_none,
  1, 175, :_reduce_none,
  2, 168, :_reduce_none,
  2, 168, :_reduce_none,
  3, 92, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  3, 100, :_reduce_none,
  3, 113, :_reduce_none,
  4, 200, :_reduce_none,
  2, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 217, :_reduce_none,
  3, 217, :_reduce_none,
  3, 201, :_reduce_none,
  2, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 220, :_reduce_none,
  3, 220, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 221, :_reduce_none,
  2, 222, :_reduce_none,
  3, 223, :_reduce_none,
  1, 224, :_reduce_none,
  3, 224, :_reduce_none ]

racc_reduce_n = 277

racc_shift_n = 440

racc_token_table = {
  false => 0,
  :error => 1,
  ";" => 2,
  :MODULE => 3,
  :identifier => 4,
  "{" => 5,
  "}" => 6,
  :ABSTRACT => 7,
  :LOCAL => 8,
  :INTERFACE => 9,
  ":" => 10,
  "," => 11,
  "::" => 12,
  :VALUETYPE => 13,
  :CUSTOM => 14,
  :TRUNCATABLE => 15,
  :SUPPORTS => 16,
  :PUBLIC => 17,
  :PRIVATE => 18,
  :FACTORY => 19,
  "(" => 20,
  ")" => 21,
  :IN => 22,
  :CONST => 23,
  "=" => 24,
  "|" => 25,
  "^" => 26,
  "&" => 27,
  ">>" => 28,
  "<<" => 29,
  "+" => 30,
  "-" => 31,
  "*" => 32,
  "/" => 33,
  "%" => 34,
  "~" => 35,
  :INTEGER_LITERAL => 36,
  :STRING_LITERAL => 37,
  :WIDE_STRING_LITERAL => 38,
  :CHARACTER_LITERAL => 39,
  :WIDE_CHARACTER_LITERAL => 40,
  :FIXED_PT_LITERAL => 41,
  :FLOATING_PT_LITERAL => 42,
  :TRUE => 43,
  :FALSE => 44,
  :TYPEDEF => 45,
  :NATIVE => 46,
  :FLOAT => 47,
  :DOUBLE => 48,
  :LONG => 49,
  :SHORT => 50,
  :UNSIGNED => 51,
  :CHAR => 52,
  :WCHART => 53,
  :BOOLEAN => 54,
  :OCTET => 55,
  :ANY => 56,
  :OBJECT => 57,
  :STRUCT => 58,
  :UNION => 59,
  :SWITCH => 60,
  :CASE => 61,
  :DEFAULT => 62,
  :ENUM => 63,
  :SEQUENCE => 64,
  "<" => 65,
  ">" => 66,
  :STRING => 67,
  :WSTRING => 68,
  "[" => 69,
  "]" => 70,
  :EXCEPTION => 71,
  :ONEWAY => 72,
  :VOID => 73,
  :OUT => 74,
  :INOUT => 75,
  :RAISES => 76,
  :CONTEXT => 77,
  :FIXED => 78,
  :VALUEBASE => 79,
  :IMPORT => 80,
  :TYPEID => 81,
  :TYPEPREFIX => 82,
  :READONLY => 83,
  :ATTRIBUTE => 84,
  :rases_expr => 85,
  :GETRAISES => 86,
  :SETRAISES => 87 }

racc_nt_base = 88

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\";\"",
  "MODULE",
  "identifier",
  "\"{\"",
  "\"}\"",
  "ABSTRACT",
  "LOCAL",
  "INTERFACE",
  "\":\"",
  "\",\"",
  "\"::\"",
  "VALUETYPE",
  "CUSTOM",
  "TRUNCATABLE",
  "SUPPORTS",
  "PUBLIC",
  "PRIVATE",
  "FACTORY",
  "\"(\"",
  "\")\"",
  "IN",
  "CONST",
  "\"=\"",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "\">>\"",
  "\"<<\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"~\"",
  "INTEGER_LITERAL",
  "STRING_LITERAL",
  "WIDE_STRING_LITERAL",
  "CHARACTER_LITERAL",
  "WIDE_CHARACTER_LITERAL",
  "FIXED_PT_LITERAL",
  "FLOATING_PT_LITERAL",
  "TRUE",
  "FALSE",
  "TYPEDEF",
  "NATIVE",
  "FLOAT",
  "DOUBLE",
  "LONG",
  "SHORT",
  "UNSIGNED",
  "CHAR",
  "WCHART",
  "BOOLEAN",
  "OCTET",
  "ANY",
  "OBJECT",
  "STRUCT",
  "UNION",
  "SWITCH",
  "CASE",
  "DEFAULT",
  "ENUM",
  "SEQUENCE",
  "\"<\"",
  "\">\"",
  "STRING",
  "WSTRING",
  "\"[\"",
  "\"]\"",
  "EXCEPTION",
  "ONEWAY",
  "VOID",
  "OUT",
  "INOUT",
  "RAISES",
  "CONTEXT",
  "FIXED",
  "VALUEBASE",
  "IMPORT",
  "TYPEID",
  "TYPEPREFIX",
  "READONLY",
  "ATTRIBUTE",
  "rases_expr",
  "GETRAISES",
  "SETRAISES",
  "$start",
  "specification",
  "specification_1",
  "specification_2",
  "import",
  "definition",
  "type_dcl",
  "const_dcl",
  "except_dcl",
  "interface",
  "module",
  "value",
  "type_id_dcl",
  "module_1",
  "interface_dcl",
  "forward_dcl",
  "interface_header",
  "interface_body",
  "forward_dcl_1",
  "interface_header_1",
  "interface_header_2",
  "interface_inheritance_spec",
  "export",
  "attr_dcl",
  "op_dcl",
  "type_prefix_dcl",
  "interface_name_1",
  "interface_name",
  "scoped_name",
  "value_dcl",
  "value_abs_dcl",
  "value_box_dcl",
  "value_forward_dcl",
  "type_spec",
  "value_inheritance_spec",
  "value_abs_dcl_1",
  "value_header",
  "value_dcl_1",
  "value_element",
  "value_inheritance_spec_1",
  "value_inheritance_spec_2",
  "value_inheritance_spaec_1_1",
  "value_name",
  "value_inheritance_spaec_2_2",
  "state_member",
  "init_dcl",
  "declarators",
  "raises_expr",
  "init_param_dcls",
  "init_param_dcl",
  "init_param_attribute",
  "param_type_spec",
  "simple_declarator",
  "const_type",
  "const_exp",
  "integer_type",
  "char_type",
  "wide_char_type",
  "boolean_type",
  "floating_pt_type",
  "string_type",
  "wide_string_type",
  "fixed_pt_const_type",
  "octet_type",
  "or_expr",
  "xor_expr",
  "and_expr",
  "shift_expr",
  "add_expr",
  "mult_expr",
  "unary_expr",
  "unary_operator",
  "primary_expr",
  "literal",
  "boolean_literal",
  "positive_int_const",
  "type_declarator",
  "struct_type",
  "union_type",
  "enum_type",
  "constr_forward_decl",
  "simple_type_spec",
  "constr_type_spec",
  "base_type_spec",
  "template_type_spec",
  "any_type",
  "object_type",
  "value_base_type",
  "sequence_type",
  "fixed_pt_type",
  "declarator",
  "complex_declarator",
  "array_declarator",
  "signed_int",
  "unsigned_int",
  "signed_short_int",
  "signed_long_int",
  "signed_longlong_int",
  "unsigned_short_int",
  "unsigned_long_int",
  "unsigned_longlong_int",
  "member_list",
  "member",
  "switch_type_spec",
  "switch_body",
  "case",
  "case_1",
  "element_spec",
  "case_label",
  "enum_type_1",
  "enumerator",
  "array_declarator_1",
  "readonly_attr_spec",
  "attr_spec",
  "except_dcl_1",
  "op_dcl_1",
  "op_type_spec",
  "parameter_dcls",
  "op_dcl_2",
  "op_dcl_3",
  "op_attribute",
  "context_expr",
  "parameter_dcls_1",
  "param_dcl",
  "param_attribute",
  "raises_expr_1",
  "context_expr_1",
  "imported_scope",
  "readonly_attr_declarator",
  "readonly_attr_declarator_1",
  "attr_declarator",
  "attr_raises_expr",
  "attr_declarator_1",
  "get_excep_expr",
  "set_excep_expr",
  "exception_list",
  "exception_list_1" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parse2.y', 11)
  def _reduce_1(val, _values, result)
    							result = IDL::Specification.new(val[0], val[1])
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 16)
  def _reduce_2(val, _values, result)
    							result = []
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 20)
  def _reduce_3(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 25)
  def _reduce_4(val, _values, result)
    							result = [ val[0] ]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 29)
  def _reduce_5(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'parse2.y', 54)
  def _reduce_18(val, _values, result)
    							result = IDL::Interface.new( val[0], val[2] )
						
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'parse2.y', 67)
  def _reduce_23(val, _values, result)
    							result = IDL::InterfaceHeader.new( val[0], val[2], val[3] )
						
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parse2.y', 78)
  def _reduce_27(val, _values, result)
    							result = []
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 82)
  def _reduce_28(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

module_eval(<<'.,.,', 'parse2.y', 106)
  def _reduce_40(val, _values, result)
    							result = val[0]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 110)
  def _reduce_41(val, _values, result)
    							result = "_#{val}"
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 114)
  def _reduce_42(val, _values, result)
    							result = "#{val[0].execute}_#{val[2]}"
						
    result
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

module_eval(<<'.,.,', 'parse2.y', 265)
  def _reduce_128(val, _values, result)
    							result = IDL::TypedefDcl.new( val[1][0], val[1][1] )
						
    result
  end
.,.,

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

module_eval(<<'.,.,', 'parse2.y', 276)
  def _reduce_134(val, _values, result)
    							result = val
						
    result
  end
.,.,

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

module_eval(<<'.,.,', 'parse2.y', 313)
  def _reduce_156(val, _values, result)
    							result = [ val[0] ]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 317)
  def _reduce_157(val, _values, result)
    							result = val[0] << val[2]
						
    result
  end
.,.,

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

module_eval(<<'.,.,', 'parse2.y', 330)
  def _reduce_161(val, _values, result)
    							result = IDL::ArrayType.new(val[0][0], val[0][1])
						
    result
  end
.,.,

# reduce 162 omitted

# reduce 163 omitted

module_eval(<<'.,.,', 'parse2.y', 338)
  def _reduce_164(val, _values, result)
    							result = "long double"
						
    result
  end
.,.,

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

module_eval(<<'.,.,', 'parse2.y', 359)
  def _reduce_172(val, _values, result)
    							result = "long long"
						
    result
  end
.,.,

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

module_eval(<<'.,.,', 'parse2.y', 370)
  def _reduce_176(val, _values, result)
    							result = "unsigned short"
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 376)
  def _reduce_177(val, _values, result)
    							result = "unsigned long"
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 382)
  def _reduce_178(val, _values, result)
    							result = "unsigned long long"
						
    result
  end
.,.,

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

module_eval(<<'.,.,', 'parse2.y', 406)
  def _reduce_185(val, _values, result)
    							result = IDL::Struct.new( val[1], val[3] )
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 412)
  def _reduce_186(val, _values, result)
    							result = [ val[0] ]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 416)
  def _reduce_187(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 422)
  def _reduce_188(val, _values, result)
    							result = IDL::Member.new( val[0], val[1] )
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 428)
  def _reduce_189(val, _values, result)
    							result = IDL::Union.new( val[1], val[4], val[7] )
						
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

module_eval(<<'.,.,', 'parse2.y', 441)
  def _reduce_195(val, _values, result)
    							result = [ val[0] ]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 445)
  def _reduce_196(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 450)
  def _reduce_197(val, _values, result)
    							result = IDL::Case.new( val[0].flatten, val[1] )
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 455)
  def _reduce_198(val, _values, result)
    							result = [ val[0] ]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 459)
  def _reduce_199(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 465)
  def _reduce_200(val, _values, result)
    							result = IDL::CaseLabel.new( val[1] );
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 469)
  def _reduce_201(val, _values, result)
    							result = IDL::DefaultLabel.new( val[0] );
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 475)
  def _reduce_202(val, _values, result)
    							result = IDL::ElementSpec.new( val[0], val[1] );
						
    result
  end
.,.,

# reduce 203 omitted

module_eval(<<'.,.,', 'parse2.y', 483)
  def _reduce_204(val, _values, result)
    							result = val
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 487)
  def _reduce_205(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

# reduce 206 omitted

module_eval(<<'.,.,', 'parse2.y', 495)
  def _reduce_207(val, _values, result)
    							result = IDL::Sequence.new( val[2], val[4] )
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 499)
  def _reduce_208(val, _values, result)
    							result = IDL::Sequence.new( val[2] )
						
    result
  end
.,.,

# reduce 209 omitted

# reduce 210 omitted

# reduce 211 omitted

# reduce 212 omitted

module_eval(<<'.,.,', 'parse2.y', 513)
  def _reduce_213(val, _values, result)
    							result = val
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 518)
  def _reduce_214(val, _values, result)
    							result = [ val[1] ]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 522)
  def _reduce_215(val, _values, result)
    							result = val[0] << val[2]
						
    result
  end
.,.,

# reduce 216 omitted

# reduce 217 omitted

module_eval(<<'.,.,', 'parse2.y', 532)
  def _reduce_218(val, _values, result)
    							result = IDL::Exception.new( val[1], val[3] )
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 537)
  def _reduce_219(val, _values, result)
    							result = []
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 541)
  def _reduce_220(val, _values, result)
    							result = val[0] << val[1]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 547)
  def _reduce_221(val, _values, result)
    							result = IDL::Operation.new( val[0], val[1], val[2], val[3], val[4], val[5] )
						
    result
  end
.,.,

# reduce 222 omitted

# reduce 223 omitted

# reduce 224 omitted

# reduce 225 omitted

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

# reduce 229 omitted

# reduce 230 omitted

module_eval(<<'.,.,', 'parse2.y', 569)
  def _reduce_231(val, _values, result)
    							result = IDL::ParameterDcls.new(val[1])
						
    result
  end
.,.,

# reduce 232 omitted

module_eval(<<'.,.,', 'parse2.y', 575)
  def _reduce_233(val, _values, result)
    							result = val
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 579)
  def _reduce_234(val, _values, result)
    							result = val[0] << val[2]
						
    result
  end
.,.,

module_eval(<<'.,.,', 'parse2.y', 585)
  def _reduce_235(val, _values, result)
    							result = IDL::Parameter.new( val[0], val[1], val[2] ) ## parameter
						
    result
  end
.,.,

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

# reduce 243 omitted

# reduce 244 omitted

# reduce 245 omitted

# reduce 246 omitted

# reduce 247 omitted

# reduce 248 omitted

# reduce 249 omitted

# reduce 250 omitted

# reduce 251 omitted

# reduce 252 omitted

# reduce 253 omitted

# reduce 254 omitted

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class IDLParser



if $0 == __FILE__

if ARGV[0] && File.file?(ARGV[0])
	raise "file suffix must be \"idl\"!" unless (ARGV[0] =~ /\.idl$/)

	f = IDL::File.new( ARGV[0] )

	s = [ "", "" ]
	open("|cpp #{f.file}") do |idl|
		tmp = IDLParser.new.parseFile( idl );
		s[0] += tmp[0]
		s[1] += tmp[1]
	end

	# header
	out = (ENV['DEBUG_IDL'].to_i > 0) ? $stdout : File.open(f.header, "w")
	out.puts( "--- header ---" ) if ENV['DEBUG_IDL'].to_i > 0
	out.puts( sprintf( ::IDL::HEADER.gsub(/\$FILE\$/, f.header).
						gsub(/\$INPUT\$/, f.file).
						gsub(/\$TIME\$/, Time.now.to_s).
						gsub(/\$MACRO\$/, f.macro), s[0]) )

	# impl (only when it's running as no-debug mode)
	unless ENV['DEBUG_IDL']. to_i > 0
		out = File.open(f.impl, "w")
		out.puts( sprintf( ::IDL::IMPL.gsub(/\$FILE\$/, f.impl).
						gsub(/\$INPUT\$/, f.file).
						gsub(/\$TIME\$/, Time.now.to_s).
						gsub(/\$MACRO\$/, f.macro).
						gsub(/\$INCLUDE\$/, File::basename( f.header )),
							s[0][(s[0] =~ /extern/) .. -1].
								gsub(/extern /, "").
								gsub(/;\n/, "\n{\n\t/* need implementation */\n}\n\n")))
	end

	# body (dispatch)
	out = (ENV['DEBUG_IDL']. to_i > 0) ? $stdout : File.open(f.body, "w") 
	out.puts( "--- body ---" ) if ENV['DEBUG_IDL'].to_i > 0
	out.puts( sprintf( ::IDL::BODY.gsub(/\$FILE\$/, f.body).
						gsub(/\$INPUT\$/, f.file).
						gsub(/\$TIME\$/, Time.now.to_s).
						gsub(/\$MACRO\$/, f.macro).
						gsub(/\$INCLUDE\$/, File::basename( f.header )), s[1]) )
	exit 

end
end
